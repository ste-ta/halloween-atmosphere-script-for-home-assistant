alias: "ðŸŽƒ Halloween Atmosphere"
description: "Creates various spooky lighting effects for Halloween (optimized for older bulbs, uses XY color space for better Zigbee compatibility).  v1.1"
mode: restart
max_exceeded: silent
fields:
  lights:
    description: "List of light entity IDs"
    example: "light.living_room, light.hallway, light.kitchen"
    selector:
      entity:
        multiple: true
        domain: light
  effect:
    description: "Which effect to play"
    example: "hell"
    selector:
      select:
        options:
          - "hell"
          - "lightning"
          - "graveyard"
          - "halloween"
          - "blood"
          - "stop"
variables:
  # Convert single entity or list to list format
  lights_list: >
    {{ lights if lights is iterable and lights is not string else [lights] }}
sequence:
  - choose:
      # ============================================================
      # ðŸ›‘ STOP - End effect and restore lights
      # ============================================================
      - conditions:
          - condition: template
            value_template: "{{ effect == 'stop' }}"
        sequence:
          - repeat:
              for_each: "{{ lights_list }}"
              sequence:
                - service: light.turn_on
                  target:
                    entity_id: "{{ repeat.item }}"
                  data:
                    brightness: 255
                    xy_color: [0.3227, 0.329]  # Warm white
                    transition: 2
          - stop: "Halloween effect stopped"

      # ============================================================
      # ðŸ”¥ HELL - Red and orange flickering flames
      # ============================================================
      - conditions:
          - condition: template
            value_template: "{{ effect == 'hell' }}"
        sequence:
          # Initialize all lights to a base state
          - repeat:
              for_each: "{{ lights_list }}"
              sequence:
                - service: light.turn_on
                  target:
                    entity_id: "{{ repeat.item }}"
                  data:
                    brightness: 200
                    xy_color: [0.6736, 0.3221]  # Red-orange
                  continue_on_error: true
                # Small delay between each light command
                - delay:
                    milliseconds: 100
          - delay:
              milliseconds: 1000
          # Main effect loop
          - repeat:
              until:
                - condition: template
                  value_template: "{{ false }}"
              sequence:
                # Apply effect to each light with proper spacing
                - repeat:
                    for_each: "{{ lights_list }}"
                    sequence:
                      - variables:
                          # Color palette: reds and oranges (XY color space)
                          colors:
                            - [0.7006, 0.2993]  # Pure red
                            - [0.6736, 0.3221]  # Red-orange
                            - [0.6389, 0.3548]  # Orange
                            - [0.6750, 0.3220]  # Dark red
                          # Brightness variations
                          brightness_levels:
                            - 255
                            - 200
                            - 150
                            - 100
                      - service: light.turn_on
                        target:
                          entity_id: "{{ repeat.item }}"
                        data:
                          xy_color: "{{ colors | random }}"
                          brightness: "{{ brightness_levels | random }}"
                          transition: "{{ range(2, 4) | random }}"
                        continue_on_error: true
                      # Mandatory delay between commands (critical for old Hue bulbs)
                      - delay:
                          milliseconds: 150
                # Wait before next cycle
                - delay:
                    seconds: "{{ range(4, 7) | random }}"

      # ============================================================
      # âš¡ LIGHTNING - Fast white flashes with darkness
      # ============================================================
      - conditions:
          - condition: template
            value_template: "{{ effect == 'lightning' }}"
        sequence:
          # Initialize all lights to dark state
          - repeat:
              for_each: "{{ lights_list }}"
              sequence:
                - service: light.turn_on
                  target:
                    entity_id: "{{ repeat.item }}"
                  data:
                    brightness: 5
                    xy_color: [0.3127, 0.329]  # Cool bluish-white
                  continue_on_error: true
                - delay:
                    milliseconds: 100
          - delay:
              milliseconds: 1000
          # Main effect loop
          - repeat:
              until:
                - condition: template
                  value_template: "{{ false }}"
              sequence:
                - variables:
                    # Random wait time until next lightning
                    lightning_wait_time: "{{ range(2, 4) | random }}"
                    # Number of flashes in this sequence
                    lightning_count: "{{ range(4, 10) | random }}"
                # Set all lights to dark
                - repeat:
                    for_each: "{{ lights_list }}"
                    sequence:
                      - service: light.turn_on
                        target:
                          entity_id: "{{ repeat.item }}"
                        data:
                          brightness: "{{ range(2, 10) | random }}"
                          xy_color: [0.3127, 0.329]  # Cool bluish-white
                          transition: 1
                        continue_on_error: true
                      - delay:
                          milliseconds: 50
                # Wait in darkness
                - delay:
                    seconds: "{{ lightning_wait_time }}"
                # Lightning flash sequence
                - repeat:
                    count: "{{ lightning_count }}"
                    sequence:
                      # Flash on - staggered across lights
                      - repeat:
                          for_each: "{{ lights_list }}"
                          sequence:
                            - service: light.turn_on
                              target:
                                entity_id: "{{ repeat.item }}"
                              data:
                                brightness: 255
                                xy_color: [0.3227, 0.329]  # Bright white
                                transition: 0
                              continue_on_error: true
                            # Delay creates traveling effect + prevents command overflow
                            - delay:
                                milliseconds: 50
                      # Short pause at peak brightness
                      - delay:
                          milliseconds: "{{ range(20, 200) | random }}"
                      # Flash off - staggered across lights
                      - repeat:
                          for_each: "{{ lights_list }}"
                          sequence:
                            - service: light.turn_on
                              target:
                                entity_id: "{{ repeat.item }}"
                              data:
                                brightness: "{{ range(3, 10) | random }}"
                                xy_color: [0.3127, 0.329]  # Cool bluish-white
                                transition: 0
                              continue_on_error: true
                            - delay:
                                milliseconds: 100
                      # Pause between flashes
                      - delay:
                          milliseconds: "{{ range(200, 600) | random }}"

      # ============================================================
      # ðŸª¦ GRAVEYARD - Slow green-blue fog effects
      # ============================================================
      - conditions:
          - condition: template
            value_template: "{{ effect == 'graveyard' }}"
        sequence:
          # Initialize all lights to base fog color
          - repeat:
              for_each: "{{ lights_list }}"
              sequence:
                - service: light.turn_on
                  target:
                    entity_id: "{{ repeat.item }}"
                  data:
                    brightness: 40
                    xy_color: [0.2039, 0.4443]  # Dark teal
                  continue_on_error: true
                - delay:
                    milliseconds: 100
          - delay:
              milliseconds: 1000
          # Main effect loop
          - repeat:
              until:
                - condition: template
                  value_template: "{{ false }}"
              sequence:
                # Apply effect to each light sequentially
                - repeat:
                    for_each: "{{ lights_list }}"
                    sequence:
                      - variables:
                          # Dark, eerie color palette (XY color space)
                          colors:
                            - [0.1724, 0.6531]  # Muted poison green
                            - [0.2039, 0.4443]  # Dark teal
                            - [0.1607, 0.2218]  # Fog blue (very dark)
                            - [0.2182, 0.6225]  # Gloomy moss green
                            - [0.1649, 0.5703]  # Sickly lime green
                            - [0.2127, 0.3608]  # Deep sea green
                            - [0.1532, 0.2947]  # Midnight blue
                            - [0.1940, 0.4953]  # Toxic green
                            - [0.1781, 0.2843]  # Ghost blue
                            - [0.2458, 0.5841]  # Swamp green
                          # Low brightness for creepy atmosphere
                          brightness_levels:
                            - 40
                            - 50
                            - 30
                            - 60
                            - 35
                            - 45
                      - service: light.turn_on
                        target:
                          entity_id: "{{ repeat.item }}"
                        data:
                          xy_color: "{{ colors | random }}"
                          brightness: "{{ brightness_levels | random }}"
                          transition: "{{ range(5, 10) | random }}"
                        continue_on_error: true
                      # Longer delay for slow transitions
                      - delay:
                          milliseconds: 200
                # Long pause between changes
                - delay:
                    seconds: "{{ range(6, 14) | random }}"

      # ============================================================
      # ðŸŽƒ HALLOWEEN - Classic orange-purple-green combination
      # ============================================================
      - conditions:
          - condition: template
            value_template: "{{ effect == 'halloween' }}"
        sequence:
          # Initialize all lights to pumpkin orange
          - repeat:
              for_each: "{{ lights_list }}"
              sequence:
                - service: light.turn_on
                  target:
                    entity_id: "{{ repeat.item }}"
                  data:
                    brightness: 200
                    xy_color: [0.6389, 0.3548]  # Pumpkin orange
                  continue_on_error: true
                - delay:
                    milliseconds: 100
          - delay:
              milliseconds: 1000
          # Main effect loop
          - repeat:
              until:
                - condition: template
                  value_template: "{{ false }}"
              sequence:
                # Apply effect to each light sequentially
                - repeat:
                    for_each: "{{ lights_list }}"
                    sequence:
                      - variables:
                          # Halloween color palette (XY color space)
                          colors:
                            - [0.6389, 0.3548]  # Pumpkin orange
                            - [0.3645, 0.1765]  # Purple
                            - [0.3833, 0.1591]  # Dark purple
                            - [0.5801, 0.3959]  # Bright orange
                            - [0.2138, 0.7097]  # Poison green
                            - [0.2679, 0.6616]  # Lime green
                          # Brightness variations
                          brightness_levels:
                            - 200
                            - 180
                            - 150
                            - 220
                      - service: light.turn_on
                        target:
                          entity_id: "{{ repeat.item }}"
                        data:
                          xy_color: "{{ colors | random }}"
                          brightness: "{{ brightness_levels | random }}"
                          transition: "{{ range(3, 6) | random }}"
                        continue_on_error: true
                      # Stagger for lively effect + prevent command overflow
                      - delay:
                          milliseconds: 150
                # Wait before next cycle
                - delay:
                    seconds: "{{ range(4, 9) | random }}"

      # ============================================================
      # ðŸ©¸ BLOOD PULSE - Heartbeat rhythm
      # ============================================================
      - conditions:
          - condition: template
            value_template: "{{ effect == 'blood' }}"
        sequence:
          # Initialize all lights to dark red
          - repeat:
              for_each: "{{ lights_list }}"
              sequence:
                - service: light.turn_on
                  target:
                    entity_id: "{{ repeat.item }}"
                  data:
                    brightness: 10
                    xy_color: [0.6750, 0.3220]  # Dark red
                  continue_on_error: true
                - delay:
                    milliseconds: 100
          - delay:
              milliseconds: 1000
          # Main effect loop - heartbeat pattern
          - repeat:
              until:
                - condition: template
                  value_template: "{{ false }}"
              sequence:
                # First heartbeat (LUB)
                - repeat:
                    for_each: "{{ lights_list }}"
                    sequence:
                      - variables:
                          colors:
                            - [0.6750, 0.3220]  # Dark red
                            - [0.7006, 0.2993]  # Blood red
                            - [0.6850, 0.3088]  # Crimson
                      - service: light.turn_on
                        target:
                          entity_id: "{{ repeat.item }}"
                        data:
                          xy_color: "{{ colors | random }}"
                          brightness: "{{ range(150, 200) | random }}"
                          transition: 0.3
                        continue_on_error: true
                - delay:
                    milliseconds: 200
                # Fade down
                - repeat:
                    for_each: "{{ lights_list }}"
                    sequence:
                      - service: light.turn_on
                        target:
                          entity_id: "{{ repeat.item }}"
                        data:
                          brightness: "{{ range(20, 40) | random }}"
                          transition: 0.4
                        continue_on_error: true
                - delay:
                    milliseconds: 150
                # Second heartbeat (DUB)
                - repeat:
                    for_each: "{{ lights_list }}"
                    sequence:
                      - service: light.turn_on
                        target:
                          entity_id: "{{ repeat.item }}"
                        data:
                          brightness: "{{ range(120, 160) | random }}"
                          transition: 0.3
                        continue_on_error: true
                - delay:
                    milliseconds: 200
                # Fade to dark
                - repeat:
                    for_each: "{{ lights_list }}"
                    sequence:
                      - service: light.turn_on
                        target:
                          entity_id: "{{ repeat.item }}"
                        data:
                          brightness: "{{ range(5, 15) | random }}"
                          transition: 0.8
                        continue_on_error: true
                # Pause before next heartbeat
                - delay:
                    seconds: "{{ range(2, 4) | random }}"
